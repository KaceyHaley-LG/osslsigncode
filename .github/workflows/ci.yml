name: CI

on:
  push:
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  version: osslsigncode-2.10-dev

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - id: ubuntu-20.04
            triplet: x64-linux
            compiler: gcc
            os: ubuntu-20.04
            generator: Unix Makefiles
            vcpkg_root:

    runs-on: ${{matrix.os}}

    env:
      VCPKG_ROOT: ${{matrix.vcpkg_root}}

    steps:
    - uses: actions/checkout@v4

    - name: Install apt dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get remove needrestart || echo Ignored
        sudo apt-get install -y build-essential libssl-dev zlib1g-dev cmake pkg-config

    - name: Configure CMake for Static Linking
      run: |
        cmake -G "${{matrix.generator}}" \
          -S ${{github.workspace}} \
          -B ${{github.workspace}}/build \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -DCMAKE_EXE_LINKER_FLAGS="-static -static-libgcc -static-libstdc++" \
          -DOPENSSL_USE_STATIC_LIBS=TRUE \
          -DOPENSSL_CRYPTO_LIBRARY=/usr/lib/x86_64-linux-gnu/libcrypto.a \
          -DOPENSSL_INCLUDE_DIR=/usr/include/openssl \
          -DOPENSSL_SSL_LIBRARY=/usr/lib/x86_64-linux-gnu/libssl.a \
          -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/dist

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: List files (Linux)
      if: runner.os != 'Windows'
      run: find .. -ls

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Upload the errors
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: errors-${{matrix.id}}
        path: |
          ${{github.workspace}}/build/Testing/Temporary/LastTest.log
          ${{github.workspace}}/build/Testing/conf/makecerts.log
          ${{github.workspace}}/build/Testing/logs/server.log
          ${{github.workspace}}/build/Testing/logs/port.log

    - name: Install
      run: cmake --install ${{github.workspace}}/build

    - name: Upload the executables
      uses: actions/upload-artifact@v4
      with:
        name: ${{env.version}}-${{matrix.id}}
        path: ${{github.workspace}}/dist
